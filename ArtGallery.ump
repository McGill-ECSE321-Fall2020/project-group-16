class UserRole
{
}

class Artwork
{
    description;
title;
creationDate;
dimensions;
  medium;
    collection;
  
  imageUrl;
1 -- 1 ArtworkOffer;
}

class Payment
{
  enum PaymentForm {
    CreditCard,
      PayPal
  }
  PaymentForm paymentForm;
Date paymentDate;
Time paymentTime;
int cardNumber;
Date expirationDate;
int cvv;
}

class Address
{
  streetAddress;
streetAddress2;
city;
postalCode;
province;
country;
1 returnAddress <- 0..1 Shipment;
  1 destination<- 0..1 Shipment;
  1 <- 0..1 ArtGallery;
  * <- 0..1 Profile;

  1 <- 0..1 Payment;
}

class Shipment {
  enum ShipmentStatus {
      OnRoute,
      Delivered,
      Canceled,
      ReadyForPickup
  }
  enum ShipmentMethod {
    Pickup,
    Delivery
  }
  
  ShipmentStatus shipmentStatus;
  ShipmentMethod shipmentMethod;
  Date estimatedDateOfArrival;
  Time estimatedTimeOfArrival;
}

class User
{
  unique username;
  password;
  unique email;
1 <@>- 0..3 UserRole;
}

class Artist
{
  isA UserRole;
  1..* -- * Artwork;
}

class Customer
{
  isA UserRole;
  1 <@>- * PurchaseRequest;
  1 <@>- * Order;
  0..1 -> 1 Order shoppingCart;
}

class Admin
{
  isA UserRole;
  * employees -- 1 ArtGallery ;
  0..1 owner -- 1 ArtGallery buisness;
}

class ArtworkOffer
{
  enum OfferStatus {
    Available,
    Sold
  }
  
  double price;
OfferStatus offerStatus ;
// todo: add shipment type enum, price
  
  * -<@> 1 UserRole;
  1 -- * PurchaseRequest;
  
  1..* <- 0..1 Shipment;
  0..1 -- * ArtworkOffer relatedPieces;
}

class PurchaseRequest 
{
  * <- 0..1 Order;
}

class ArtGalleryApplication
{
  1 <@>- * User;
}

class Order
{
  enum OrderStatus {
    InCart,
    PaymentPending, 
    Placed,
    Shipped,
    Delivered
  }
  OrderStatus orderStatus;
  double totalAmount;
  Date orderDate;
  Time orderTime;
 autounique orderId;
  1 <@>- 0..1 Payment;
  1 <@>- 1..* Shipment;
}

class ArtGallery{
  
  name;
0..1 -<@> 1 ArtGalleryApplication;
  1 <@>- * Artwork;
}

class Profile{
  description;
firstName;
lastName;
profileImageUrl;
0..1 -<@> 1 User;
}